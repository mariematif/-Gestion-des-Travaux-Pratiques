/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import connexion.Connexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Hp
 */
public class GraphMoyenneParTP extends javax.swing.JInternalFrame {

    /**
     * Creates new form GraphMoyenneParTP
     */
    public GraphMoyenneParTP() {
        super("Graphique : Moyenne par TP", true, true, true, true);
        setSize(700, 500);
        setLocation(50, 50);

        Map<String, Double> moyennes = getMoyenneParTP();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        for (Map.Entry<String, Double> entry : moyennes.entrySet()) {
            dataset.addValue(entry.getValue(), "Moyenne", entry.getKey());
        }

        JFreeChart chart = ChartFactory.createBarChart(
                "Moyenne par TP",
                "TP",
                "Note Moyenne",
                dataset,
                PlotOrientation.VERTICAL,
                false, true, false);

        ChartPanel chartPanel = new ChartPanel(chart);
        setContentPane(chartPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private Map<String, Double> getMoyenneParTP() {
        Map<String, Double> moyennes = new HashMap<>();
        try {
            Connection con = Connexion.getConnection();
            String sql = "SELECT tp.matiere, AVG(note) as moyenne "
                    + "FROM participationtp p "
                    + "JOIN tp ON tp.id = p.tp_id "
                    + "GROUP BY tp.matiere";

            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                moyennes.put(rs.getString("matiere"), rs.getDouble("moyenne"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return moyennes;
    }
}
